{
  "swagger": "2.0",
  "info": {
    "description": "Documentation for the public endpoints provided by the Monkeytype API server.\n\nNote that authentication is performed with the Authorization HTTP header in the format `Authorization: ApeKey YOUR_APE_KEY`\n\nThere is a rate limit of `30 requests per minute` across all endpoints with some endpoints being more strict. Rate limit rates are shared across all ape keys.\n\nNote: We are currently re-working our APIs. Some endpoints are documented at https://api.monkeytype.com/docs/v2/public",
    "version": "1.0.0",
    "title": "Monkeytype API",
    "termsOfService": "https://monkeytype.com/terms-of-service",
    "contact": {
      "name": "Support",
      "email": "support@monkeytype.com"
    }
  },
  "host": "api.monkeytype.com",
  "schemes": ["https"],
  "basePath": "/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "users",
      "description": "User data and related operations"
    },
    {
      "name": "results",
      "description": "User results data and related operations"
    }
  ],
  "paths": {
    "/users/personalBests": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's personal best data",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "The primary mode (i.e., time)",
            "required": true,
            "type": "string"
          },
          {
            "name": "mode2",
            "in": "query",
            "description": "The secondary mode (i.e., 60)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PersonalBest"
            }
          }
        }
      }
    },
    "/users/stats": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's typing stats data",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Stats"
            }
          }
        }
      }
    },
    "/users/tags": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's tags data",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tags"
            }
          }
        }
      }
    },
    "/users/{uidOrName}/profile": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's profile",
        "parameters": [
          {
            "name": "uidOrName",
            "in": "path",
            "description": "The user uid or name. Defaults to the user name. To filter by uid set the parameter `isUid` to ``.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isUid",
            "in": "query",
            "description": "Indicates the parameter `uidOrName` is an uid.",
            "required": false,
            "type": "string",
            "minLength": 0,
            "maxLength": 0
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        }
      }
    },
    "/users/currentTestActivity": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's test activity data for the last ~52 weeks",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CurrentTestActivity"
            }
          }
        }
      }
    },
    "/users/streak": {
      "get": {
        "tags": ["users"],
        "summary": "Gets a user's streak",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserStreak"
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "tags": ["results"],
        "summary": "Gets up to 1000 results (endpoint limited to 30 requests per day)",
        "parameters": [
          {
            "name": "onOrAfterTimestamp",
            "in": "query",
            "description": "Get results on or after a Unix timestamp in milliseconds. Must be no earlier than Thu May 14 2020 04:00:00 GMT+0000 (i.e., 1670454228000). If omitted, defaults to the most recent results.",
            "required": false,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "type": "number",
            "minimum": 0,
            "maximum": 1000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset of the item at which to begin the response.",
            "required": false,
            "type": "number",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Results"
            }
          }
        }
      }
    },
    "/results/last": {
      "get": {
        "tags": ["results"],
        "summary": "Gets a user's last saved result",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Response": {
      "type": "object",
      "required": ["message", "data"],
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "PersonalBest": {
      "type": "object",
      "properties": {
        "acc": {
          "type": "number",
          "format": "double",
          "example": 94.44
        },
        "consistency": {
          "type": "number",
          "format": "double",
          "example": 75.98
        },
        "difficulty": {
          "type": "string",
          "example": "normal"
        },
        "lazyMode": {
          "type": "boolean",
          "example": false
        },
        "language": {
          "type": "string",
          "example": "english"
        },
        "punctuation": {
          "type": "boolean",
          "example": false
        },
        "raw": {
          "type": "number",
          "format": "double",
          "example": 116.6
        },
        "wpm": {
          "type": "number",
          "format": "double",
          "example": 107.6
        },
        "timestamp": {
          "type": "integer",
          "example": 1644438189583
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "example_name"
        },
        "banned": {
          "type": "boolean",
          "example": true
        },
        "addedAt": {
          "type": "integer",
          "example": 1644438189583
        },
        "typingStats": {
          "type": "object",
          "properties": {
            "startedTests": {
              "type": "integer",
              "example": 578
            },
            "completedTests": {
              "type": "integer",
              "example": 451
            },
            "timeTyping": {
              "type": "number",
              "format": "double",
              "example": 3941.6
            }
          }
        },
        "personalBests": {
          "type": "object",
          "properties": {
            "time": {
              "type": "object",
              "properties": {
                "15": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "30": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "60": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "120": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                }
              }
            },
            "words": {
              "type": "object",
              "properties": {
                "10": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "25": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "50": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                },
                "100": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonalBest"
                  }
                }
              }
            }
          }
        },
        "discordId": {
          "type": "string",
          "example": "974761412044437307"
        },
        "discordAvatar": {
          "type": "string",
          "example": "6226b17aebc27a4a8d1ce04b"
        },
        "inventory": {
          "type": "object",
          "properties": {
            "badges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "selected": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "details": {
          "type": "object",
          "properties": {
            "bio": {
              "type": "string",
              "example": "I love MonkeyType!"
            },
            "keyboard": {
              "type": "string",
              "example": "Keychron V4"
            },
            "socialProfiles": {
              "type": "object",
              "properties": {
                "twitter": {
                  "type": "string",
                  "example": "monkeytype"
                },
                "github": {
                  "type": "string",
                  "example": "monkeytype"
                },
                "website": {
                  "type": "string",
                  "example": "https://monkeytype.com/"
                }
              }
            }
          }
        }
      }
    },
    "Stats": {
      "type": "object",
      "properties": {
        "startedTests": {
          "type": "integer",
          "example": 578
        },
        "completedTests": {
          "type": "integer",
          "example": 451
        },
        "timeTyping": {
          "type": "number",
          "format": "double",
          "example": 3941.6
        }
      }
    },
    "Tags": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "63fde8d39312642481070f5d"
          },
          "name": {
            "type": "string",
            "example": "example_tag"
          },
          "personalBests": {
            "type": "object",
            "properties": {
              "time": {
                "type": "object",
                "properties": {
                  "15": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "30": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "60": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "120": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  }
                }
              },
              "words": {
                "type": "object",
                "properties": {
                  "10": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "25": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "50": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  },
                  "100": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/PersonalBest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Results": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Result"
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6226b17aebc27a4a8d1ce04b"
        },
        "wpm": {
          "type": "number",
          "format": "double",
          "example": 154.84
        },
        "rawWpm": {
          "type": "number",
          "format": "double",
          "example": 154.84
        },
        "charStats": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "example": [44, 0, 0, 0]
        },
        "acc": {
          "type": "number",
          "format": "double",
          "example": 100
        },
        "mode": {
          "type": "string",
          "example": "words"
        },
        "mode2": {
          "type": "string",
          "example": "10"
        },
        "quoteLength": {
          "type": "integer",
          "example": -1
        },
        "timestamp": {
          "type": "integer",
          "example": 1651141719000
        },
        "restartCount": {
          "type": "integer",
          "example": 0
        },
        "incompleteTestSeconds": {
          "type": "number",
          "format": "double",
          "example": 14.5
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["6210edbfc4fdc8a1700e648b"]
        },
        "consistency": {
          "type": "number",
          "format": "double",
          "example": 78.68
        },
        "keyConsistency": {
          "type": "number",
          "format": "double",
          "example": 60.22
        },
        "chartData": {
          "type": "object",
          "properties": {
            "wpm": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "example": [144, 144, 144, 154]
            },
            "raw": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "example": [150, 148, 124, 114]
            },
            "err": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "example": [0, 0, 0, 0]
            }
          }
        },
        "testDuration": {
          "type": "number",
          "format": "double",
          "example": 3.41
        },
        "afkDuration": {
          "type": "number",
          "format": "double",
          "example": 0
        },
        "keySpacingStats": {
          "type": "object",
          "properties": {
            "average": {
              "type": "number",
              "format": "double",
              "example": 77.61
            },
            "sd": {
              "type": "number",
              "format": "double",
              "example": 33.31
            }
          }
        },
        "keyDurationStats": {
          "type": "object",
          "properties": {
            "average": {
              "type": "number",
              "format": "double",
              "example": 42.01
            },
            "sd": {
              "type": "number",
              "format": "double",
              "example": 19.65
            }
          }
        }
      }
    },
    "CurrentTestActivity": {
      "type": "object",
      "properties": {
        "testByDays": {
          "type": "array",
          "items": {
            "type": "number",
            "nullable": true
          },
          "example": [null, null, null, 1, 2, 3, null, 4],
          "description": "Test activity by day. Last element of the array are the tests on the date specified by the `lastDay` property. All dates are in UTC."
        },
        "lastDay": {
          "type": "integer",
          "example": 1712140496000
        }
      }
    },
    "UserStreak": {
      "type": "object",
      "properties": {
        "lastResultTimestamp": {
          "type": "integer"
        },
        "length": {
          "type": "integer"
        },
        "maxLength": {
          "type": "integer"
        },
        "hourOffset": {
          "type": "integer",
          "nullable": true
        }
      }
    }
  }
}
