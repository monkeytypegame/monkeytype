{
  "name": "code_rust",
  "noLazyMode": true,
  "words": [
    "as",
    "async",
    "await",
    "break",
    "const",
    "continue",
    "crate",
    "dyn",
    "else",
    "enum",
    "extern",
    "false",
    "fn",
    "for",
    "if",
    "impl",
    "in",
    "let",
    "loop",
    "match",
    "=>",
    "->",
    "Option",
    "Result",
    "Some(T)",
    "None",
    "Ok(T)",
    "Err(E)",
    "mod",
    "move",
    "mut",
    "&mut",
    "pub",
    "pub(crate)",
    "ref",
    "return",
    "Self",
    "self",
    "static",
    "struct",
    "super",
    "trait",
    "true",
    "type",
    "union",
    "unsafe",
    "use",
    "where",
    "while",
    "panic!()",
    "println!(\"{}\", T)",
    "(T, E)",
    "u8",
    "u16",
    "u32",
    "u64",
    "u128",
    "usize",
    "i8",
    "i16",
    "i32",
    "i64",
    "i128",
    "f32",
    "f64",
    "isize",
    "bool",
    "char",
    "str",
    "&str",
    "[0; 3]",
    "[bool; 5]",
    "[i32; 8]",
    "[f32; 3]",
    "&[u8]",
    "&[u16]",
    "()",
    "(i32, i32)",
    "(&str, f32, u8)",
    "Vec",
    "Vec::new()",
    "Vec<T>",
    "Vec<u8>",
    "Vec<u16>",
    "Vec<u32>",
    "Vec<i32>",
    "Vec<&str>",
    "Vec<String>",
    "vec![]",
    "HashMap",
    "HashMap::new()",
    "String",
    "String::new()",
    "&String",
    "String::from(\"monkeytype\")",
    "\"monkeytype\".to_string()",
    "collect::<Vec<i32>>()",
    "trim()",
    "parse()",
    "len()",
    "split(\" \")",
    "push('a')",
    "push_str(\"bar\")",
    "contains(\"foo\")",
    "is_empty()",
    "parse::<u32>()",
    "chars()",
    "to_lowercase()",
    "to_uppercase()",
    "replace(\"a\", \"b\")",
    "lazy_static",
    "iter()",
    "into_iter()",
    "map(|s| s.trim())",
    "filter(|x| x.is_ok())",
    "any(|x| x == 2)",
    "<'a>",
    "&'a",
    "map",
    "BTreeMap",
    "BTreeSet",
    "VecDeque",
    "LinkedList",
    "HashSet",
    "&'static",
    "..",
    "..=",
    "?",
    "macro_rules!",
    "{}",
    "{:?}",
    "{:#?}",
    "format!",
    "unwrap()",
    "expect(\"fail\")",
    "Ok(())",
    "is_ok",
    "is_err",
    "is_some",
    "is_none",
    "assert!",
    "assert_eq!",
    "into()",
    "try_into()",
    "from()",
    "clone()",
    "std",
    "std::io",
    "std::collections",
    "std::fs",
    "std::fmt",
    "std::env",
    "std::num",
    "std::path",
    "std::process",
    "io::Error",
    "io::Result<()>",
    "io::stdin()",
    "read_line",
    "fs::File",
    "Path",
    "PathBuf",
    "Command",
    "ToString",
    "Display",
    "From",
    "Into",
    "AsRef",
    "Deref",
    "Borrow",
    "Read",
    "Write",
    "Iterator",
    "Copy",
    "Send",
    "Sized",
    "Sync",
    "Unpin",
    "env::args()",
    "super::*",
    "#[derive(Debug)]",
    "#[derive(Default)]",
    "#[derive(Clone)]",
    "#[derive(Copy)]",
    "#[derive(PartialEq)]",
    "#[derive(Eq)]",
    "#[derive(PartialOrd)]",
    "#[derive(Ord)]",
    "#[derive(Hash)]",
    "#[cfg(test)]",
    "#[test]",
    "#[should_panic]"
  ]
}
